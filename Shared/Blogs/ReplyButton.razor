@using LuvFinder_Blazor_WASM.Services;
@using LuvFinder_ViewModels;
@inject IBlogService BlogService

@if (HidereplyBtn)
{
    <div class="show-reply-content">
        <div><textarea @bind="@ReplyMessage"></textarea></div>
        <div class="highlight-error"><i>@Error</i></div>
        <div>
            <button class="lab-btn btn-sm" @onclick="() => Reply()" disabled="@DisableButton">
                Reply
            </button>
            <button class="lab-btn btn-sm"
            @onclick="()=>HideReplyButton(false)">
                Cancel
            </button>
        </div>
    </div>
}
else
{
    <span class="reply">
        <a @onclick="()=>HideReplyButton(true)"
            rel="nofollow" class="comment-reply-link"><i class="icofont-reply-all"></i>Reply
        </a>
    </span>
}

@code {

    [Parameter]
    public string UserCommented { get; set; }

    [Parameter]
    public int BlogID { get; set; }

    [Parameter]
    public  LuvFinder_ViewModels.BlogComment Comment { get; set; }

    [Parameter]
    public Action ReloadComments { get; set; }

    public string Error { get; set; }

    public bool DisableButton { get; set; }

    public bool HidereplyBtn { get; set; } 

    public string ReplyMessage { get; set; } = string.Empty;

    void HideReplyButton(bool hide)
    {
        Error = string.Empty;
        HidereplyBtn = hide;
    }

    private async void Reply()
    {
        Error = string.Empty;
        if (ReplyMessage.Length == 0)
        {
            Error = "Comment Required";
        }
        else
        {
            DisableButton = true;
            var commentAdded = await BlogService.AddBlogComment(UserCommented, BlogID, ReplyMessage, Comment.ID);
            if (commentAdded)
                ReloadComments();
            DisableButton = false;
        }
    }
}
