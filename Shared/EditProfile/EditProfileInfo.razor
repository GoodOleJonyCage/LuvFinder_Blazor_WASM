@using LuvFinder_Blazor_WASM.Helpers;
@using LuvFinder_Blazor_WASM.Services;
@using LuvFinder_ViewModels;
@inject IProfileService ProfileService
@inject IAuthenticationService AuthenticationService


<EditBasicInfo UserInfo="@UserInfo"></EditBasicInfo>
<EditProfileQuestions ProfileQuestions="@ProfileQuestions"></EditProfileQuestions>


<div class="m-auto">
    <div class=" text-center  ">
        <div class="text-success"><b>@Result</b></div>
        <div class="highlight-error">@Error</div>
        @foreach (var error in Errors)
        {
            <div class="highlight-error">@error</div>
        }
    </div>
    <div class="col-sm-3 m-auto banner-form">
        <button @onclick="()=>Save()" class="smaller lab-btn" type="Submit">
            Save Profile
        </button>
    </div>
</div>


@code {
    [Parameter]
    public string? UserName { get; set; } = string.Empty;

    private UserInfo UserInfo { get; set; } = new UserInfo();
    public List<ProfileQuestion> ProfileQuestions { get; set; } = new List<ProfileQuestion>();

    public string Result { get; set; }
    public string Error { get; set; }
    public List<string> Errors { get; set; } = new List<string>();

    protected async override Task OnInitializedAsync()
    {
        try
        {
            UserInfo = await ProfileService.UserInfo(UserName);
            ProfileQuestions = await ProfileService.GetUserProfile(UserName);
        }
        catch (Exception exc)
        {
            Error = exc.Message;
            StateHasChanged();
        }
    }

    protected async void Save()
    {
        Result = Error = string.Empty;
        Errors.Clear();

        try
        {
            var saved = await ProfileService.SaveProfile(UserName, UserInfo, ProfileQuestions);
            if (saved)
            {
                Result = "Changes Saved";
            }
        }
        catch (Exception exc)
        {
            // try
            // {
            //     List<ProfileQuestion>? Error_vm = System.Text.Json.JsonSerializer.Deserialize<List<LuvFinder_ViewModels.ProfileQuestion?>>(exc.Message);
            //     for (int i = 0; i < Error_vm.Count; i++)
            //     {
            //         if (Error_vm[i].Question.InvalidResponse )
            //              Errors.Add(Error_vm[i].Question.Error);
            //     }
            // }
            // catch (Exception)
            // {
            //     //if its an array returned
            //     if (exc.Message.Contains("["))
            //     {
            //         Errors = System.Text.Json.JsonSerializer.Deserialize<List<string>>(exc.Message);
            //     }
            //     else
            //     {
            //         Error = exc.Message;
            //     }
            // }
            if (exc.Message.Contains("["))//if an array
            {
                Errors = System.Text.Json.JsonSerializer.Deserialize<List<string>>(exc.Message);
            }
            else
            {
                Error = exc.Message;
            }
        }
        StateHasChanged();
    }

}
