@page "/login"
@using System.ComponentModel.DataAnnotations
@using LuvFinder_Blazor_WASM.Helpers;
@using LuvFinder_Blazor_WASM.Services;
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<PageHeader></PageHeader>


<div class="login-section padding-tb">
    <div class=" container">
        <div class="account-wrapper">
            <h3 className="title">Login</h3>
            <div class="account-form">
                <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        @* <label class="login-label">Username</label> *@
                        <InputText @bind-Value="model.Username" placeholder="User Name" />
                        <ValidationMessage For="@(() => model.Username)" />
                    </div>
                    <div class="form-group">
                       @*  <label class="login-label">Password</label> *@
                        <InputText @bind-Value="model.Password" type="password" placeholder="Password" />
                        <ValidationMessage For="@(() => model.Password)" />
                    </div>
                    <div class="form-group">
                        <button class="d-block lab-btn">
                            @if (loading)
                            {
                                <span class="spinner-border spinner-border-sm mr-1"></span>
                            }
                            Login
                        </button>
                    </div>
                    @if (!string.IsNullOrEmpty(error))
                    {
                        <div class="alert alert-danger mt-3 mb-0">@error</div>
                    }
                </EditForm>
            </div>
            <div class="account-bottom">
                <span class="d-block cate pt-10">
                    Don’t Have any Account? <a href="/register">
                        Sign Up
                    </a>
                </span>
                <span class="or"><span>or</span></span>
                <h5 class="subtitle">Login With Social Media</h5>
                <ul class="social-media social-color lab-ul d-flex justify-content-center">
                    <li>
                        <a href="/#" class="facebook"><i class="icofont-facebook"></i></a>
                    </li>
                    <li>
                        <a href="/#" class="twitter"><i class="icofont-twitter"></i></a>
                    </li>
                    <li>
                        <a href="/#" class="linkedin"><i class="icofont-linkedin"></i></a>
                    </li>
                    <li>
                        <a href="/#" class="instagram"><i class="icofont-instagram"></i></a>
                    </li>
                    <li>
                        <a href="/#" class="pinterest"><i class="icofont-pinterest"></i></a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@code {
    private Model model = new Model();
    private bool loading;
    private string error;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // redirect to home if already logged in
        if (AuthenticationService.User != null)
        {
            NavigationManager.NavigateTo("");
        }
    }


    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            await AuthenticationService.Login(model.Username, model.Password);
            var returnUrl = NavigationManager.QueryString("returnUrl") ?? "";
            NavigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }

    private class Model
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }
}